{"version":3,"sources":["redux/ActionTypes.js","redux/MainReducer.js","redux/store.js","components/cards/Card1.js","redux/Actions.js","components/cards/Card2.js","components/cards/Card3.js","components/cards/Card4.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["INCREASE_HEADCOUNTER","INCREASE_CARD1_COUNTER","INCREASE_CARD2_COUNTER","INCREASE_CARD3_COUNTER","INCREASE_CARD4_COUNTER","initialState","HeadCounter","Card1Counter","Card2Counter","Card3Counter","Card4Counter","MainReducer","state","action","type","store","createStore","applyMiddleware","thunk","Card1","MainState","dispatch","useState","Card1Sec","setCard1Sec","Card1Min","setCard1Min","TimerOn","setInterval","prev","Fragment","style","width","height","backgroundColor","borderRadius","margin","onClick","Card2","Card2Sec","setCard2Sec","Card2Min","setCard2Min","Card3","Card3Sec","setCard3Sec","Card3Min","setCard3Min","Card4","Card4Sec","setCard4Sec","Card4Min","setCard4Min","Main","Mseconds","setMseconds","Mminutes","setMminutes","useEffect","useSelector","useDispatch","overflow","display","alignItems","justifyContent","marginTop","flexWrap","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66f27ca7.chunk.js","sourcesContent":["export const INCREASE_HEADCOUNTER=\"INCREASE_HEADCOUNTER\";\r\nexport const INCREASE_CARD1_COUNTER=\"INCREASE_CARD1_COUNTER\";\r\nexport const INCREASE_CARD2_COUNTER=\"INCREASE_CARD2_COUNTER\";\r\nexport const INCREASE_CARD3_COUNTER=\"INCREASE_CARD3_COUNTER\";\r\nexport const INCREASE_CARD4_COUNTER=\"INCREASE_CARD4_COUNTER\";\r\n\r\n","import { Card1Timer } from \"./Actions\";\r\nimport {\r\n  CARD1_TIMER,\r\n  HEADER_TIMER,\r\n  INCREASE_CARD1_COUNTER,\r\n  INCREASE_CARD2_COUNTER,\r\n  INCREASE_CARD3_COUNTER,\r\n  INCREASE_CARD4_COUNTER,\r\n  INCREASE_HEADCOUNTER,\r\n  UPDATE_CARD1_TIMER,\r\n  UPDATE_HEADER_TIMER,\r\n} from \"./ActionTypes\";\r\n\r\nconst initialState = {\r\n  HeadCounter: 0,\r\n  Card1Counter: 0,\r\n  Card2Counter: 0,\r\n  Card3Counter: 0,\r\n  Card4Counter: 0,\r\n};\r\n\r\nconst MainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case INCREASE_HEADCOUNTER:\r\n      return { ...state, HeadCounter: state.HeadCounter + 1 };\r\n\r\n    case INCREASE_CARD1_COUNTER:\r\n      return { ...state, Card1Counter: state.Card1Counter + 1 };\r\n    case INCREASE_CARD2_COUNTER:\r\n      return { ...state, Card2Counter: state.Card2Counter + 1 };\r\n    case INCREASE_CARD3_COUNTER:\r\n      return { ...state, Card3Counter: state.Card3Counter + 1 };\r\n    case INCREASE_CARD4_COUNTER:\r\n      return { ...state, Card4Counter: state.Card4Counter + 1 };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default MainReducer;\r\n","import { createStore,applyMiddleware} from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport MainReducer from \"./MainReducer\";\r\nconst  store = createStore(MainReducer,applyMiddleware(thunk));\r\nexport default store","import React, { useState } from \"react\";\r\nimport { IncreaseCard1Count } from \"../../redux/Actions\";\r\nfunction Card1({ MainState, dispatch }) {\r\n  const [Card1Sec, setCard1Sec] = useState(0);\r\n  const [Card1Min, setCard1Min] = useState(0);\r\n  const [Clock, setClock] = useState(false);\r\n  const ClickCounter1 = () => {\r\n    dispatch(IncreaseCard1Count());\r\n    TimerOn();\r\n  };\r\n  const TimerOn = () => {\r\n    setInterval(() => {\r\n      setCard1Sec((prev) => prev + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  if (Card1Sec === 60) {\r\n    setCard1Min((prev) => prev + 1);\r\n    setCard1Sec(0);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          width: \"250px\",\r\n          height: \"250px\",\r\n          backgroundColor: \"orchid\",\r\n          borderRadius: \"10px\",\r\n          margin:\"10px\"\r\n        }}\r\n        onClick={ClickCounter1}\r\n      >\r\n        <h1>Card 1</h1>\r\n        <h2> No Of Clicks: {MainState.Card1Counter}</h2>\r\n        <h3>Timer</h3>\r\n        <span>{Card1Min >= 10 ? Card1Min : \"0\" + Card1Min} </span>:\r\n        <span> {Card1Sec >= 10 ? Card1Sec : \"0\" + Card1Sec}</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Card1;\r\n","import {\r\n  INCREASE_CARD1_COUNTER,\r\n  INCREASE_CARD2_COUNTER,\r\n  INCREASE_CARD3_COUNTER,\r\n  INCREASE_CARD4_COUNTER,\r\n  INCREASE_HEADCOUNTER,\r\n} from \"./ActionTypes\";\r\n\r\nexport const IncreaseHeadCounter = () => {\r\n  return {\r\n    type: INCREASE_HEADCOUNTER,\r\n  };\r\n};\r\nexport const IncreaseCard1Count = () => {\r\n  return {\r\n    type: INCREASE_CARD1_COUNTER,\r\n  };\r\n};\r\nexport const IncreaseCard2Count = () => {\r\n  return {\r\n    type: INCREASE_CARD2_COUNTER,\r\n  };\r\n};\r\nexport const IncreaseCard3Count = () => {\r\n  return {\r\n    type: INCREASE_CARD3_COUNTER,\r\n  };\r\n};\r\nexport const IncreaseCard4Count = () => {\r\n  return {\r\n    type: INCREASE_CARD4_COUNTER,\r\n  };\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { IncreaseCard2Count } from \"../../redux/Actions\";\r\nfunction Card2({ MainState, dispatch }) {\r\n  const [Card2Sec, setCard2Sec] = useState(0);\r\n  const [Card2Min, setCard2Min] = useState(0);\r\n  const [Clock, setClock] = useState(false);\r\n  const ClickCounter2 = () => {\r\n    dispatch(IncreaseCard2Count());\r\n    TimerOn();\r\n  };\r\n  const TimerOn = () => {\r\n    setInterval(() => {\r\n      setCard2Sec((prev) => prev + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  if (Card2Sec === 60) {\r\n    setCard2Min((prev) => prev + 1);\r\n    setCard2Sec(0);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          width: \"250px\",\r\n          height: \"250px\",\r\n          backgroundColor: \"springgreen\",\r\n          borderRadius: \"10px\",\r\n          margin:\"10px\"\r\n        }}\r\n        onClick={ClickCounter2}\r\n      >\r\n        <h1>Card 2</h1>\r\n        <h2> No Of Clicks: {MainState.Card2Counter}</h2>\r\n        <h3>Timer</h3>\r\n        <span>{Card2Min >= 10 ? Card2Min : \"0\" + Card2Min} </span>:\r\n        <span> {Card2Sec >= 10 ? Card2Sec : \"0\" + Card2Sec}</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Card2;\r\n","import React, { useState } from \"react\";\r\nimport { IncreaseCard3Count } from \"../../redux/Actions\";\r\nfunction Card3({ MainState, dispatch }) {\r\n  const [Card3Sec, setCard3Sec] = useState(0);\r\n  const [Card3Min, setCard3Min] = useState(0);\r\n  const [Clock, setClock] = useState(false);\r\n  const ClickCounter3 = () => {\r\n    dispatch(IncreaseCard3Count());\r\n    TimerOn();\r\n  };\r\n  const TimerOn = () => {\r\n    setInterval(() => {\r\n      setCard3Sec((prev) => prev + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  if (Card3Sec === 60) {\r\n    setCard3Min((prev) => prev + 1);\r\n    setCard3Sec(0);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          width: \"250px\",\r\n          height: \"250px\",\r\n          backgroundColor: \"tomato\",\r\n          borderRadius: \"10px\",\r\n          margin:\"10px\"\r\n        }}\r\n        onClick={ClickCounter3}\r\n      >\r\n        <h1>Card 3</h1>\r\n        <h2> No Of Clicks: {MainState.Card3Counter}</h2>\r\n        <h3>Timer</h3>\r\n        <span>{Card3Min >= 10 ? Card3Min : \"0\" + Card3Min} </span>:\r\n        <span> {Card3Sec >= 10 ? Card3Sec : \"0\" + Card3Sec}</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Card3;\r\n","import React, { useState } from \"react\";\r\nimport { IncreaseCard4Count } from \"../../redux/Actions\";\r\nfunction Card4({ MainState, dispatch }) {\r\n  const [Card4Sec, setCard4Sec] = useState(0);\r\n  const [Card4Min, setCard4Min] = useState(0);\r\n  const [Clock, setClock] = useState(false);\r\n  const ClickCounter4 = () => {\r\n    dispatch(IncreaseCard4Count());\r\n    TimerOn();\r\n  };\r\n  const TimerOn = () => {\r\n    setInterval(() => {\r\n      setCard4Sec((prev) => prev + 1);\r\n    }, 1000);\r\n  };\r\n\r\n  if (Card4Sec === 60) {\r\n    setCard4Min((prev) => prev + 1);\r\n    setCard4Sec(0);\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        style={{\r\n          width: \"250px\",\r\n          height: \"250px\",\r\n          backgroundColor: \"whitesmoke\",\r\n          borderRadius: \"10px\",\r\n          margin:\"10px\"\r\n        }}\r\n        onClick={ClickCounter4}\r\n      >\r\n        <h1>Card 4</h1>\r\n        <h2> No Of Clicks: {MainState.Card4Counter}</h2>\r\n        <h3>Timer</h3>\r\n        <span>{Card4Min >= 10 ? Card4Min : \"0\" + Card4Min} </span>:\r\n        <span> {Card4Sec >= 10 ? Card4Sec : \"0\" + Card4Sec}</span>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Card4;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { IncreaseHeadCounter } from \"../redux/Actions\";\r\nimport Card1 from \"./cards/Card1\";\r\nimport Card2 from \"./cards/Card2\";\r\nimport Card3 from \"./cards/Card3\";\r\nimport Card4 from \"./cards/Card4\";\r\n\r\nfunction Main() {\r\n  const [Mseconds, setMseconds] = useState(0);\r\n  const [Mminutes, setMminutes] = useState(0);\r\n  useEffect(() => {\r\n    setInterval(() => {\r\n      setMseconds((prev) => prev + 1);\r\n    }, 1000);\r\n  }, []);\r\n  // Redux\r\n  let MainState = useSelector((state) => state);\r\n  const dispatch = useDispatch();\r\n  //\r\n  if (Mseconds === 60) {\r\n    setMminutes((prev) => prev + 1);\r\n    setMseconds(0);\r\n  }\r\n  return (\r\n    <div\r\n      style={{ height: \"100vh\", backgroundColor: \"slategray\",overflow:\"auto\" }}\r\n      onClick={() => dispatch(IncreaseHeadCounter())}\r\n    >\r\n      <nav>\r\n        <h2>Every Click Counts: {MainState.HeadCounter}</h2>\r\n        <h1>\r\n          <span>{Mminutes >= 10 ? Mminutes : \"0\" + Mminutes}</span>:\r\n          <span>{Mseconds >= 10 ? Mseconds : \"0\" + Mseconds}</span>\r\n        </h1>\r\n      </nav>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"space-around\",\r\n          marginTop: \"100px\",\r\n          flexWrap: \"wrap\",\r\n        }}\r\n      >\r\n        <Card1 MainState={MainState} dispatch={dispatch} />\r\n        <Card2 MainState={MainState} dispatch={dispatch} />\r\n        <Card3 MainState={MainState} dispatch={dispatch} />\r\n        <Card4 MainState={MainState} dispatch={dispatch} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import './App.css';\nimport {Provider} from \"react-redux\"\nimport store from './redux/store';\nimport Main from './components/Main';\nfunction App() {\n  return (\n    <Provider store={store} >\n    <div className=\"App\">\n      <Main/>\n\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}